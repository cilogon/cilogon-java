<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                  http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5">

    <display-name>The MyProxy Delegation Service</display-name>

    <!--
     Note that this next section is REQUIRED! This prevents anything else but this webapp from
     accessing the /initiate endpoint. Never expose the /initiate endpoint to the outside world.
     If you are using Apache, you should also not have the /initiate endpoint referenced in the
     proxy_ajp file (so no ProxyPass entry). The reason for this endpoint is that it allows
     a pluggable architecture for replacing the authorization module. If you replace the authorize
     endpoint with your own module, you authenticate the user, then if that succeeds,
     pass the user request straight through to the initiate
     endpoint for processing.
      -->

    <!--  <security-constraint>
          <web-resource-collection>
              <web-resource-name>Lockdown_initiate_endpoint</web-resource-name>
              <url-pattern>/init</url-pattern>
              <http-method>GET</http-method>
              <http-method>POST</http-method>
              <http-method>PUT</http-method>
              <http-method>DELETE</http-method>
          </web-resource-collection>
          <auth-constraint/>
      </security-constraint>-->

    <servlet>
        <servlet-name>clientServlet</servlet-name>
        <servlet-class>edu.uiuc.ncsa.myproxy.oa4mp.oauth2.servlet.ClientServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>clientServlet</servlet-name>
        <url-pattern>/clients</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>discovery</servlet-name>
        <servlet-class>edu.uiuc.ncsa.myproxy.oa4mp.oauth2.servlet.OA2DiscoveryServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>discovery</servlet-name>
        <url-pattern>/.well-known/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>discovery</servlet-name>
        <url-pattern>/certs</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>initiate</servlet-name>
        <servlet-class>org.cilogon.oauth2.servlet.impl.CILOA2AuthorizedServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>initiate</servlet-name>
        <url-pattern>/init</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>accessToken</servlet-name>
        <servlet-class>org.cilogon.oauth2.servlet.impl.CILOA2ATServlet</servlet-class>
        <load-on-startup>0</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>accessToken</servlet-name>
        <url-pattern>/token</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>DBService</servlet-name>
        <servlet-class>org.cilogon.oauth2.servlet.impl.DBService2</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DBService</servlet-name>
        <url-pattern>/dbService</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>getCert</servlet-name>
        <servlet-class>org.cilogon.oauth2.servlet.impl.CILOA2CertServlet</servlet-class>
        <load-on-startup>0</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>getCert</servlet-name>
        <url-pattern>/getcert</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>clientVetting</servlet-name>
        <servlet-class>edu.uiuc.ncsa.myproxy.oa4mp.oauth2.servlet.OA2RegistrationServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>clientVetting</servlet-name>
        <url-pattern>/register</url-pattern>
    </servlet-mapping>



    <servlet>
        <servlet-name>userInfo</servlet-name>
        <servlet-class>edu.uiuc.ncsa.myproxy.oa4mp.oauth2.servlet.UserInfoServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>userInfo</servlet-name>
        <url-pattern>/userinfo</url-pattern>
    </servlet-mapping>

    <resource-ref>
        <description>
            Resource reference to a factory for javax.mail.Session
            instances that may be used for sending electronic mail
            messages, preconfigured to connect to the appropriate
            SMTP server.
        </description>
        <res-ref-name>mail/Session</res-ref-name>
        <res-type>javax.mail.Session</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>

    <listener>
        <listener-class>org.cilogon.oauth2.servlet.loader.CILOA2Bootstrapper</listener-class>
    </listener>

    <error-page>
        <error-code>404</error-code>
        <location>/generalerror.jsp</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/generalerror.jsp</location>
    </error-page>

    <context-param>
        <param-name>oa4mp:server.error.subject</param-name>
        <param-value>/var/www/config/errorSubject.template</param-value>
    </context-param>


    <context-param>
        <param-name>oa4mp:server.error.message</param-name>
        <param-value>/var/www/config/errorMessage.template</param-value>
    </context-param>

    <!-- Other error conditions are handled internally by the app -->
    <!--
       Path to the configuration file
    -->
    <!--
        <context-param>
              <param-name>oa4mp:cil-oa2.server.config.file</param-name>
              <param-value>/path/to/file</param-value>
          </context-param>
    -->
    <!--
       This (optional) parameter tells which named configuration within the file to use. If there
        is only a single configuration, that is used.
    -->

    <!--
        <context-param>
              <param-name>oa4mp:cil-oa2.server.config.name</param-name>
              <param-value>name-of-configuration</param-value>
          </context-param>
    -->

</web-app>